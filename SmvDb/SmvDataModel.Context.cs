//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmvDb
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SmvDbEntities : DbContext
    {
        public SmvDbEntities()
            : base("name=SmvDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Module> Modules { get; set; }
        public virtual DbSet<Plugin> Plugins { get; set; }
        public virtual DbSet<Session> Sessions { get; set; }
        public virtual DbSet<SessionTask> SessionTasks { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TaskAction> TaskActions { get; set; }
        public virtual DbSet<TaskModule> TaskModules { get; set; }
        public virtual DbSet<TaskPlugin> TaskPlugins { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
    
        public virtual ObjectResult<ActionDiffBetweenTwoSessions_Result> ActionDiffBetweenTwoSessions(string firstSession, string secondSession)
        {
            var firstSessionParameter = firstSession != null ?
                new ObjectParameter("FirstSession", firstSession) :
                new ObjectParameter("FirstSession", typeof(string));
    
            var secondSessionParameter = secondSession != null ?
                new ObjectParameter("SecondSession", secondSession) :
                new ObjectParameter("SecondSession", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ActionDiffBetweenTwoSessions_Result>("ActionDiffBetweenTwoSessions", firstSessionParameter, secondSessionParameter);
        }
    
        public virtual int ModuleDiffBetweenTwoSessions(string firstSession, string secondSession)
        {
            var firstSessionParameter = firstSession != null ?
                new ObjectParameter("FirstSession", firstSession) :
                new ObjectParameter("FirstSession", typeof(string));
    
            var secondSessionParameter = secondSession != null ?
                new ObjectParameter("SecondSession", secondSession) :
                new ObjectParameter("SecondSession", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModuleDiffBetweenTwoSessions", firstSessionParameter, secondSessionParameter);
        }
    
        public virtual ObjectResult<ModuleOverview_Result> ModuleOverview(string moduleId)
        {
            var moduleIdParameter = moduleId != null ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModuleOverview_Result>("ModuleOverview", moduleIdParameter);
        }
    
        public virtual ObjectResult<ModuleOverviewByPath_Result> ModuleOverviewByPath(string modulePath)
        {
            var modulePathParameter = modulePath != null ?
                new ObjectParameter("modulePath", modulePath) :
                new ObjectParameter("modulePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModuleOverviewByPath_Result>("ModuleOverviewByPath", modulePathParameter);
        }
    
        public virtual ObjectResult<string> PluginDiffBetweenTwoSessions(string firstSession, string secondSession)
        {
            var firstSessionParameter = firstSession != null ?
                new ObjectParameter("FirstSession", firstSession) :
                new ObjectParameter("FirstSession", typeof(string));
    
            var secondSessionParameter = secondSession != null ?
                new ObjectParameter("SecondSession", secondSession) :
                new ObjectParameter("SecondSession", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PluginDiffBetweenTwoSessions", firstSessionParameter, secondSessionParameter);
        }
    
        public virtual ObjectResult<PluginOverview_Result> PluginOverview(string pluginId)
        {
            var pluginIdParameter = pluginId != null ?
                new ObjectParameter("pluginId", pluginId) :
                new ObjectParameter("pluginId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PluginOverview_Result>("PluginOverview", pluginIdParameter);
        }
    
        public virtual ObjectResult<SummaryTableForSession_Result> SummaryTableForSession(string sessionId)
        {
            var sessionIdParameter = sessionId != null ?
                new ObjectParameter("sessionId", sessionId) :
                new ObjectParameter("sessionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SummaryTableForSession_Result>("SummaryTableForSession", sessionIdParameter);
        }
    
        public virtual ObjectResult<taskDetailsParameter_Result> taskDetailsParameter(string sessionIdParameter)
        {
            var sessionIdParameterParameter = sessionIdParameter != null ?
                new ObjectParameter("sessionIdParameter", sessionIdParameter) :
                new ObjectParameter("sessionIdParameter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<taskDetailsParameter_Result>("taskDetailsParameter", sessionIdParameterParameter);
        }
    }
}
